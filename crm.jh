enum CustomerType {
    REGULAR, CORPORATE
}

enum AdressType {
    REGULAR, INVOICE
}

enum ContactType {
    REGULAR, CONTACT
}

entity Lre {
    description String required
}

entity Customer {
    firstName String maxlength(64),
    lastName String  maxlength(64),
    middleName String  maxlength(64),
    customerType CustomerType,
    creationDate LocalDate
}


entity CustomerAddres {
    adressType AdressType required,
    country String required  maxlength(64),
    city String  maxlength(64),
    home String  maxlength(64),
    homeLetter String  maxlength(16),
    flat String maxlength(64),
    zip String maxlength(64),
    isActive Boolean
}

entity CustomerContact {
    greeting String,
    firstName String,
    lastName String,
    mobile String,
    fax String,
    email String,
    memo String,
    contactType ContactType
}

entity ClassOfService {
    description String maxlength(256),
    created ZonedDateTime
}

entity Subscriber {
    subscriberType String,
    subscriberPaymentClass Integer,
    creationDate ZonedDateTime
}

entity SubscriberWallet {
    activationDate ZonedDateTime,
    expired Boolean,
    created ZonedDateTime
}

entity SubscriberWalletProperty {
    balance Double,
    created ZonedDateTime
}

entity Communication {
    title String,
    contactNumber String,
    contactPerson String,
    contactDescripton String,
    created ZonedDateTime
}

entity Remark {
    remark String maxlength(2048)
    type String
}

relationship OneToMany {
    Lre to Customer
}
relationship OneToMany {
    Customer to CustomerAddres
}

relationship OneToMany {
    Customer to CustomerContact
}

relationship OneToMany {
    Customer to Communication
}

relationship OneToMany {
    Communication to Remark
}

relationship OneToMany {
    Lre to ClassOfService
}

relationship OneToMany {
    ClassOfService to Subscriber
}

relationship OneToMany {
    Customer to Subscriber
}

relationship OneToMany {
    Subscriber to SubscriberWallet
}

relationship OneToMany {
    SubscriberWallet to SubscriberWalletProperty
}

relationship ManyToMany {
    Customer{parentCustomer(parentCustomerId)} to Customer
}
